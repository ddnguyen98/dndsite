FORMAT: 1A

# Three Headed Dragon

Three Headed dragon is an api for managing users and their character data

## Data Structures
### User (Base Model)
+ Include Id
+ email: test@test.com (string, required)
+ username: CoolKid (string, required)
+ password: applessauce (string, required)


### Character (Base Model)
+ Include Id
+ name: Sir Henry (string)
+ player: Dominic (string)
+ alignment: Chaotic Neutral (string)
+ level: 6 (number)
+ class: Fighter (string)
+ race: Dog (string)
+ campaign: Barktastic (string)
+ diety: Korn (string)
+ size: Medium (string)
+ age: 12 (number)
+ gender: Male (string)
+ hair: Brown (string)
+ height: 6"11 (string)
+ gender: Male (string)
+ characterWeight: 32 (number)
+ eyes: red (string)
+ gender: Male (string)
+ currency: 32g (string)
+ languages: Comon (string)
+ description: Male (string)
+ personality: Male (string)
+ traits: Male (string)
+ flaws: Male (string)
+ contacts: Male (string)
+ enemies: Male (string)
+ notes: Male (string)    
+ image: henry.jpg (string)

+ stat (array)
  + 11 (number)
  + 11 (number)
  + 11 (number)
  + 11 (number)
  + 11 (number)
  + 11 (number)
  
+ statMod (array)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)

+ hp: 122 (number)
+ hpWounds: 52 (number)
+ hpDice: 3d12 (string)
+ dmgReduction: Blunt (string)

+ ac: 122 (number)
+ acArmor: 52 (number)
+ acShield: 122 (number)
+ acDex: 52 (number)
+ acNatural: 122 (number)
+ acMisc: 52 (number)
+ acTouch: 122 (number)
+ acFlat: 52 (number)

+ init: 1 (number)
+ initDex: 2 (number)
+ initMisc: 3 (number)

+ speed: 3 (number)

+ attackTotal (array)
  + 12 (number)
  + 11 (number)

+ attackBase (array)
  + 3 (number)
  + 4 (number)

+ attackMod (array)
  + 8 (number)
  + 9 (number)
  
+ attackMisc (array)
  + 2 (number)
  + 2 (number)  

+ spellsKnown (array)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  
+ spellsPerDay (array)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)

+ spellDC (array)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  + 2 (number)
  
+ savingThrow (array)
  + 5
  + 5
  + 5
  
+ savingThrowBase (array)
  + 3
  + 3
  + 5
  
+ savingThrowMod (array)
  + 2
  + 2
  + 5
  
+ weight (array)
  + 20
  + 60
  + 180
  + 180
  + 30

+ userId: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string)

### Spell (Base Model)
+ Include Id
+ spellName: shock (string, required)
+ spellComponents: V,S (string, required)
+ spellCastingTime: 3 seconds (string, required)
+ spellRange: 2ft (string, required)
+ spellTarget: 1 person (string, required)
+ spellDuration: instant (string, required)
+ spellSavingThrow: dex (string, required)
+ spellDescription: it hurt! (string, required)

+ characterId: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)


### Feat (Base Model)
+ Include Id
+ featName: Big boomb (string, required)
+ featDescription: it go explode! (string, required)

+ characterId: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)

### Weapon (Base Model)
+ Include Id
+ weaponName: Sword of killing (string, required)
+ weaponAttackBonus: 3 (number, required)
+ weaponDamage: 3d12 (string, required)
+ weaponCritical: 17-20 (string, required)
+ weaponRange: 3ft (string, required)
+ weaponSpecial: It burns them for 2 damage (string)
+ weaponAmmunition: "" (string)
+ weaponWeight: 3 (number, required)
+ weaponSize: medium (string, required)
+ weaponType: slash (string, required)

+ characterId: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)

### Item (Base Model)
+ Include Id
+ itemName: apple (string, required)
+ itemDescription: it taste good (string, required)
+ itemWeight: 3 (number, required)

+ characterId: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)

### Skill (Base Model)
+ Include Id
+ skillName: Walking (string, required)
+ skillModType: Dex (string, required)
+ skillTotal: 6 (number, required)
+ skillAbilityMod: 3 (number, required)
+ skillRank: 3 (number, required)


+ characterId: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)

### Base Model (object)
+ createdAt: `2019-08-05T08:40:51.620Z` (string, required) - Date resource was create
+ updatedAt: `2019-08-05T08:40:51.620Z` (string, required) - Date resource was last updated

### Id
+ id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string, required) - Unique Identifier (uuid)


# Group User Collection


## /users
### GET
Get all the users

+ Response 200 (application/json)
    + Attributes (array[User])

### POST
Create a new user
+ Request (application/json)
    + Attributes (object)
        + email: test@test.com (string, required)
        + username: CoolKid (string, required)
        + password: applessauce (string, required)
+ Response 201 (application/json)
    + Attributes (User)
    

## /users/{id}

+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id
   
### GET
Get one user by id

+ Response 200
    + Attributes (User)

### PUT
Update a user by id

+ Response 202
    + Attributes (User)

### DELETE
Delete a character

+ Response 202

# Group Character Collection

## /characters
### GET
Get all the characters

+ Response 200 (application/json)
    + Attributes (array[Character])

### POST
Create a new character
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Character)
    
## /characters/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id

### GET
Get one character by id

+ Response 200 (application/json)
    + Attributes (Character)

### PUT
Update a character by id

+ Response 202
    + Attributes (Character)

### DELETE
Delete a character

+ Response 204

# Group Feat Collection
## /feats
### GET
Get all the feats

+ Response 200 (application/json)
    + Attributes (array[Feat])

### POST
Create a new feat
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Feat)
    
## /feats/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id

### GET
Get one feat by id

+ Response 200 (application/json)
    + Attributes (Feat)

### PUT
Update a Feat

+ Response 202
    + Attributes (Feat)
### DELETE
Delete a Feat

+ Response 202

# Group Item Collection
## /items
### GET
Get all the items

+ Response 200 (application/json)
    + Attributes (array[Item])

### POST
Create a new character
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Item)
    
## /items/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id

### GET
Get one item by id

+ Response 200 (application/json)
    + Attributes (Item)

### PUT
Update a item by id

+ Response 202
    + Attributes (Item)

### DELETE
Delete a item

+ Response 202

# Group Spell Collection
## /spells
### GET
Get all the spells

+ Response 200 (application/json)
    + Attributes (array[Spell])

### POST
Create a new spell
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Spell)
    
## /spells/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id

### GET
Get one spell by id
+ Response 200 (application/json)
    + Attributes (Item)

### PUT
Update a spell by id

+ Response 202
    + Attributes (Spell)

### DELETE
Delete a item

+ Response 202

# Group Weapon Collection
## /weapons
### GET
Get all the weapons

+ Response 200 (application/json)
    + Attributes (array[Weapon])

### POST
Create a new weapon
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Weapon)
    
## /weapons/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id

### GET
Get one weapon by id
+ Response 200 (application/json)
    + Attributes (Weapon)

### PUT
Update a weapon by id

+ Response 202
    + Attributes (Weapon)

### DELETE
Delete a Weapon

+ Response 202

# Group Skill Collection
## /skills
### GET
Get all the skill

+ Response 200 (application/json)
    + Attributes (array[Skill])

### POST
Create a new skill
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Skill)
    
## /skills/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id

### GET
Get one skill by id
+ Response 200 (application/json)
    + Attributes (Skill)

### PUT
Update a skill by id

+ Response 202
    + Attributes (Skill)

### DELETE
Delete a skill

+ Response 202

# Group Authentication

## /auth/signup

### POST 
Sign a user up
+ Request (application/json)
    + Attributes (object)
        + email: rhigley@fullsail.com (string, required)
        + username: rhigley (string, required)
        + password: pwd123 (string, required)
+ Response 200 (application/json)
    + Attributes (object)
      + loggedIn: true (boolean, required)
      + token: JSONWEBTOKEN (string, required)

## /auth/login
### POST
Log a user in
+ Request (application/json)
    + Attributes (object)
        + username: rhigley (string, required)
        + password: pwd123 (string, required)
+ Response 200 (application/json)
    + Attributes (object)
      + loggedIn: true (boolean, required)
      + token: JSONWEBTOKEN (string, required)
    
## /auth/forgot

### POST
Send a reset password email when a user forgets their password
+ Request (application/json)
    + Attributes (object)
        + email: rhigley@fullsail.com (string, required)
+ Response 200 (application/json)
    + Attributes (object)
      + message: 'Check your email for further instructions'
      
## /auth/reset

### POST 
Update the user's password with a new one and log them in
+ Request (application/json)
    + Attributes (object)
        + token: RESETTOKEN (string, required)
        + password: pwd123 (string, required)
        + rePassword: pwd123 (string, required)
+ Response 200 (application/json)
    + Attributes (object)
      + loggedIn: true (boolean, required)
      + token: JSONWEBTOKEN (string, required)
