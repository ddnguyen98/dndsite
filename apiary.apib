FORMAT: 1A

# Three Headed Dragon

Three Headed dragon is an api for managing users and their character data

## Data Structures
### User (Base Model)
+ Include Id
+ email: test@test.com (string, required)
+ username: CoolKid (string, required)
+ password: applessauce (string, required)


### Character (Base Model)
+ Include Id
+ name: Sir Henry (string, required)
+ player: Dominic (string, required)
+ alignment: Chaotic Neutral (string, required)
+ level: 6 (number, required)
+ class: Fighter (string, required)
+ race: Dog (string, required)
+ campaign: Barktastic (string, required)
+ diety: Korn (string, required)
+ size: Medium (string, required)
+ age: 12 (number, required)
+ gender: Male (string, required)
+ hair: Brown (string, required)
+ height: 6"11 (string, required)
+ gender: Male (string, required)
+ weight: 32 (number, required)
+ eyes: red (string, required)
+ gender: Male (string, required)
+ currency: 32g (string, required)
+ languages: Comon (string, required)
+ description: Male (string, required)
+ personality: Male (string, required)
+ traits: Male (string, required)
+ flaws: Male (string, required)
+ contacts: Male (string, required)
+ enemies: Male (string, required)
+ notes: Male (string, required)

+ stat (array, required)
  + 11
  + 11
  + 11
  + 11
  + 11
  + 11
+ statMod (array, required)
  + +2
  + +2
  + +2
  + +2
  + +2
  + +2

+ hp: 122 (number, required)
+ hpWounds: 52 (number, required)
+ hpDice: 3d12 (string, required)
+ dmgReduction: Blunt (string, required)

+ ac: 122 (number, required)
+ acArmor: 52 (number, required)
+ acShield: 122 (number, required)
+ acDex: 52 (number, required)
+ acNatural: 122 (number, required)
+ acMisc: 52 (number, required)
+ acTouch: 122 (number, required)
+ acFlat: 52 (number, required)

+ init: 1 (number, required)
+ initDex: 2 (number, required)
+ initMisc: 3 (number, required)

+ speed: 3 (number, required)

+ statMod (array, required)
  + +2
  + +2
+ statMod (array, required)
  + +2
  + +2

+ skillName (array, required)
  + Riding
  + Running
+ skillModType (array, required)
  + Dex
  + Dex
+ skillTotal (array, required)
  + 5
  + 5
+ skillAbilityMod (array, required)
  + +2
  + +2
+ skillRank (array, required)
  + 3
  + 3
  
+ savingThrow (array, required)
  + 5
  + 5
+ savingThrowBase (array, required)
  + 3
  + 3
+ savingThrowMod (array, required)
  + 2
  + 2
  
+ weight (array, required)
  + 20
  + 60
  + 180
  + 180
  + 30
  
+ savingThrow (array, required)
  + 5
  + 5
+ savingThrowBase (array, required)
  + 3
  + 3
+ savingThrowMod (array, required)
  + 2
  + 2

+ user_Id: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)

### Spell (Base Model)
+ Include Id
+ title: shock (string, required)
+ components: V,S (string, required)
+ castingTime: 3 seconds (string, required)
+ range: 2ft (string, required)
+ target: 1 person (string, required)
+ duration: instant (string, required)
+ savingThrow: dex (string, required)
+ description: it hurt! (string, required)

+ character_Id: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)


### Feat (Base Model)
+ Include Id
+ title: Big boomb (string, required)
+ description: it go explode! (string, required)

+ character_Id: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)

### Weapon (Base Model)
+ Include Id
+ title: Sword of killing (string, required)
+ attackBonus: 3 (number, required)
+ damage: 3d12 (string, required)
+ critical: 17-20 (string, required)
+ range: 3ft (string, required)
+ specialProps: It burns them for 2 damage (string)
+ ammunition: "" (string)
+ weight: 3 (number, required)
+ size: medium (string, required)
+ type: slash (string, required)

+ character_Id: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)

### Item (Base Model)
+ Include Id
+ title: apple (string, required)
+ description: it taste good (string, required)
+ weight: 3 (number, required)

+ character_Id: '3e836f45-5f86-4a9a-a27b-17e71b60317d' (string, required)

### Base Model (object)
+ createdAt: `2019-08-05T08:40:51.620Z` (string, required) - Date resource was create
+ updatedAt: `2019-08-05T08:40:51.620Z` (string, required) - Date resource was last updated

### Id
+ id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string, required) - Unique Identifier (uuid)


# Group User Collection


## /users
### GET
Get all the users

+ Response 200 (application/json)
    + Attributes (array[User])

### POST
Create a new user
+ Request (application/json)
    + Attributes (object)
        + email: test@test.com (string, required)
        + username: CoolKid (string, required)
        + password: applessauce (string, required)
+ Response 201 (application/json)
    + Attributes (User)
    

## /users/{id}

+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id
    
### GET
Get one user by id

+ Response 200
    + Attributes (User)

### PUT
Update a user by id

+ Response 202
    + Attributes (User)

### DELETE
Delete a character

+ Response 202

# Group Character Collection

## /characters
### GET
Get all the characters

+ Response 200 (application/json)
    + Attributes (array[Character])

### POST
Create a new character
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Character)
    
## /characters/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id
    
### GET
Get one character by id

+ Response 200
    + Attributes (Character)

### PUT
Update a character by id

+ Response 202
    + Attributes (Character)
### DELETE
Delete a character

+ Response 202

# Group Feat Collection
## /feats
### GET
Get all the feats

+ Response 200 (application/json)
    + Attributes (array[Feat])

### POST
Create a new feat
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Feat)
    
## /feats/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id

### GET
Get one feat by id

+ Response 200
    + Attributes (Feat)

### PUT
Update a Feat

+ Response 202
    + Attributes (Feat)
### DELETE
Delete a Feat

+ Response 202

# Group Item Collection
## /items
### GET
Get all the items

+ Response 200 (application/json)
    + Attributes (array[Item])

### POST
Create a new character
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Item)
    
## /items/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id

### GET
Get one item by id

+ Response 200
    + Attributes (Item)

### PUT
Update a item by id

+ Response 202
    + Attributes (Item)

### DELETE
Delete a item

+ Response 202


# Group Spell Collection
## /characters
### GET
Get all the characters

+ Response 200 (application/json)
    + Attributes (array[Character])

### POST
Create a new character
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Character)
    
## /characters/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id
    
### GET
Get one character by id

# Group Weapon Collection
## /characters
### GET
Get all the characters

+ Response 200 (application/json)
    + Attributes (array[Character])

### POST
Create a new character
+ Request (application/json)
    + Attributes (object)
        + title: WAI (string, required)
+ Response 201 (application/json)
    + Attributes (Character)
    
## /characters/{id}
+ Parameters
    + id: `3e836f45-5f86-4a9a-a27b-17e71b60317d` (string) - User id
    
### GET
Get one character by id
    
# Group Authentication

## /auth/signup

### POST 
Sign a user up
+ Request (application/json)
    + Attributes (object)
        + email: rhigley@fullsail.com (string, required)
        + username: rhigley (string, required)
        + password: pwd123 (string, required)
+ Response 200 (application/json)
    + Attributes (object)
      + loggedIn: true (boolean, required)
      + token: JSONWEBTOKEN (string, required)

## /auth/login
### POST
Log a user in
+ Request (application/json)
    + Attributes (object)
        + username: rhigley (string, required)
        + password: pwd123 (string, required)
+ Response 200 (application/json)
    + Attributes (object)
      + loggedIn: true (boolean, required)
      + token: JSONWEBTOKEN (string, required)
    
## /auth/forgot

### POST
Send a reset password email when a user forgets their password
+ Request (application/json)
    + Attributes (object)
        + email: rhigley@fullsail.com (string, required)
+ Response 200 (application/json)
    + Attributes (object)
      + message: 'Check your email for further instructions'
      
## /auth/reset

### POST 
Update the user's password with a new one and log them in
+ Request (application/json)
    + Attributes (object)
        + token: RESETTOKEN (string, required)
        + password: pwd123 (string, required)
        + rePassword: pwd123 (string, required)
+ Response 200 (application/json)
    + Attributes (object)
      + loggedIn: true (boolean, required)
      + token: JSONWEBTOKEN (string, required)